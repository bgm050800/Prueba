package interface_juego;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;



import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class historial_juego extends javax.swing.JFrame {
    
    
// Declaración de variables globales
    String[][] historial_ganadores; //Variable global para el guardado de los jugadores que fueron ganadores
    

    
//    Constructor del panel inicio
    public historial_juego() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_fondo_inicio = new fondo_panel_inicio();
        boton_regresar_inicio = new javax.swing.JPanel();
        campo_texto_regresar = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_ganadores = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel_fondo_inicio.setBackground(new java.awt.Color(153, 153, 153));

        boton_regresar_inicio.setBackground(new java.awt.Color(51, 0, 153));
        boton_regresar_inicio.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        boton_regresar_inicio.setForeground(new java.awt.Color(255, 255, 255));
        boton_regresar_inicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_regresar_inicioMousePressed(evt);
            }
        });

        campo_texto_regresar.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_regresar.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_regresar.setText("REGRESAR");

        javax.swing.GroupLayout boton_regresar_inicioLayout = new javax.swing.GroupLayout(boton_regresar_inicio);
        boton_regresar_inicio.setLayout(boton_regresar_inicioLayout);
        boton_regresar_inicioLayout.setHorizontalGroup(
            boton_regresar_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_regresar_inicioLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(campo_texto_regresar)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        boton_regresar_inicioLayout.setVerticalGroup(
            boton_regresar_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_regresar_inicioLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(campo_texto_regresar)
                .addGap(18, 18, 18))
        );

        tabla_ganadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabla_ganadores);

        javax.swing.GroupLayout panel_fondo_inicioLayout = new javax.swing.GroupLayout(panel_fondo_inicio);
        panel_fondo_inicio.setLayout(panel_fondo_inicioLayout);
        panel_fondo_inicioLayout.setHorizontalGroup(
            panel_fondo_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_fondo_inicioLayout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(panel_fondo_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_fondo_inicioLayout.createSequentialGroup()
                        .addComponent(boton_regresar_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_fondo_inicioLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        panel_fondo_inicioLayout.setVerticalGroup(
            panel_fondo_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_fondo_inicioLayout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(boton_regresar_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        getContentPane().add(panel_fondo_inicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 640));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void boton_regresar_inicioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_regresar_inicioMousePressed
        // TODO add your handling code here:
        inicio_juego panel_inicio = new inicio_juego();
        panel_inicio.setVisible(true);
        dispose();
    }//GEN-LAST:event_boton_regresar_inicioMousePressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        int cantidad_filas, cantidad_columnas;
        String tipo_celda;
        try {
            // Se guarda el archivo de ganadores en una variable
            FileInputStream archivo_jugadores_ganadores = new FileInputStream(
                    "src/base_juego_historial/base_jugadores_historial.xlsx");

            // Se utiliza la libreria APACHE POI para el manejo de excel con java
            //https://javadoc.io/doc/org.apache.poi/poi/latest/index.html
            // Se guarda el libro y la hoja que se van a estar utilizando
            XSSFWorkbook libro = new XSSFWorkbook(archivo_jugadores_ganadores);
            XSSFSheet hoja = libro.getSheetAt(0);
            // Se obtiene la cantidad de filas que tiene la hoja
            cantidad_filas = hoja.getLastRowNum();
            // Se declara la variable fila para ubicar la primera fila de la hoja
            Row fila = hoja.getRow(0);
            // Se obtiene la cantidad de columnas que hay por fila de la hoja
            cantidad_columnas = fila.getLastCellNum();

            // Se genera el arreglo multidimencional con los valores de fila y columna
            // obtenidos de la hoja se agrega
            // 1 para obtener la cantidad total para el arreglo
            historial_ganadores = new String[cantidad_filas + 1][cantidad_columnas + 1];

            // Se recorre la hoja apartir de la fila 1 para no tomar los datos de los
            // nombres de las columnas
            for (int i = 0; i <= cantidad_filas; i++) {
                // Se obtiene la fila que actual que se encuentra de la hoja
                fila = hoja.getRow(i);
                // Se recorre la hoja por la cantidad de columnas que la hoja posee
                for (int j = 0; j < cantidad_columnas; j++) {
                    // Se obtiene la columna que actual que se encuentra de la hoja
                    Cell celda = fila.getCell(j);
                    // Se obtiene el tipo de valor que tiene la columna
                    tipo_celda = celda.getCellType().toString();
                    // Verifica que el tipo de celda sea numerico y se guarda en el arreglo
                    // historial_jugadores
                    if (tipo_celda == "NUMERIC") {
                        //Se obtiene el valor de la celda y se convierte en String
                        historial_ganadores[i][j] = "₡ " + Integer.toString((int) celda.getNumericCellValue());

                     // Verifica que el tipo de celda sea String y se guarda en el arreglo historial_jugadores
                    } else if (tipo_celda == "STRING") {
                        historial_ganadores[i][j] = celda.getStringCellValue();// Se obtiene el valor de la celda
                    }
                }
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(inicio_juego.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(inicio_juego.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Cambia la fuente y el tamaño de letra del Jtable
        tabla_ganadores.setFont(new java.awt.Font("Tahoma", 0, 15));
        // Cambia el color de la fuente
        tabla_ganadores.setForeground(Color.WHITE);

        // Cambia la tabla para que se vea transparente
        tabla_ganadores.setOpaque(false);
        ((DefaultTableCellRenderer) tabla_ganadores.getDefaultRenderer(Object.class)).setOpaque(false);
        jScrollPane2.setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        tabla_ganadores.setShowGrid(false);

        // Se llena el Jtable con la información de los ganadores
        tabla_ganadores.setModel(new javax.swing.table.DefaultTableModel(historial_ganadores,
                new String[] { "Nombre Jugador", "Premio" }));      

    }//GEN-LAST:event_formWindowActivated
//    Creacion de de clase para fondo de panel superior de inicio
    class fondo_panel_inicio extends JPanel{
//       Creacion de variable para obtener la imagen incluida en el paquete imagenes_juego
        private Image imagen_superior_inicio;
        
        @Override
        public void paint(Graphics g){
//          Creacion de variable para obtener la imagen incluida en el paquete imagenes_juego
            imagen_superior_inicio = new ImageIcon(getClass().getResource("/imagenes_juego/imgpanel_historial.jpg")).getImage();
            
//          Se definen los parametros de tamano para la imagen
            g.drawImage(imagen_superior_inicio,0,0,getWidth(),getHeight(),this);
              
//          Muestra la imagen en el panel con este metodo
            setOpaque(false);

//          Evita ocultar los elementos del panel que se encuentren con este metodo
            super.paint(g);
             
        }
//Final de clase para fondo de inicio        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(historial_juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(historial_juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(historial_juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(historial_juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new historial_juego().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boton_regresar_inicio;
    private javax.swing.JLabel campo_texto_regresar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panel_fondo_inicio;
    private javax.swing.JTable tabla_ganadores;
    // End of variables declaration//GEN-END:variables



}


