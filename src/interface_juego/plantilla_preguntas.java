/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface_juego;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Bykgm
 */
public class plantilla_preguntas extends javax.swing.JFrame implements Runnable  {

        

        // Declaración de variables globales
        
        String nombre_jugador;//Variable para guardar el nombre del jugador
        String[][] millonario = new String[15][5]; // Arreglo con 15 filas y 5 columnas para el guardado
                                                                 // de las preguntas con sus respectivas respuestas
        String[][] millonario_correctas = new String[15][5]; // Arreglo con 15 filas y 5 columnas para el
                                                                           // guardado de las preguntas con sus
                                                                           // respectivas respuestas correctas
        String[][] preguntas_realizadas = new String[15][1]; // Arreglo de 15 filas y 2 columna para
                                                                           // guardar solamente las preguntas realizadas
        int[][] valor_preguntas = new int[15][1];//Arreglo para guardar el valor de las preguntas
        

        Locale locale = new Locale("es", "CR");// Instanciamiento de localización y la moenda de Costa Rica  
        NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(locale);//Formateador para los montos de las ganancias
        
        String zona_segura;
        int contador_global; // Variable para llevar el conteo de las preguntas totales
        double posicion_random; // Variable para posicion aleatoria de la pregunta
        int posicion_random_entera; // Varible para convertir la posicion aleatoria en entera y poder
                                                  // utilizarla en el arreglo
        
        double posicion_random_ayudante; // Variable para posicion aleatoria del ayudante
        int posicion_random_entera_ayudante; // Varible para convertir la posicion aleatoria en entera y poder
                                                  // utilizarla en el arreglo
        int fila_arreglo; // Variable para el manejo de las filas de los arreglos
        int columna_arreglo; // Variable para el manejo de las columna de los arreglos

        String respuesta_a;// Varibles para guardar las respuestas de la pregunta actual
        String respuesta_b;// Varibles para guardar las respuestas de la pregunta actual
        String respuesta_c;// Varibles para guardar las respuestas de la pregunta actual
        String respuesta_d;// Varibles para guardar las respuestas de la pregunta actual

        int confirmación_pregunta; // Varible utilizada para la confirmación de la pregunta definitiva

        inicio_juego panel_inicio = new inicio_juego();// Instanciamiento de panel de inicio de juego
        
        Thread hilo; //Variable para hilo
        String hora,minutos,segundos; //Variable para guardar la hora, minutos y segundos actuales
        
        boolean validacion_nombre = false;
        

    
    
// Codigo interfaz    
    public plantilla_preguntas() {
        initComponents();
        
        //Se corre el hilo al inicio del programa y que este nos permita obtener la hora
        hilo=new Thread(this);
        hilo.start();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_fondo_plantila_preguntas = new fondo_panel_plantilla();
        boton_respuesta_1 = new javax.swing.JPanel();
        campo_texto_respuesta_1 = new javax.swing.JLabel();
        campo_texto_respuesta_a = new javax.swing.JLabel();
        boton_respuesta_3 = new javax.swing.JPanel();
        campo_texto_respuesta_3 = new javax.swing.JLabel();
        campo_texto_respuesta_c = new javax.swing.JLabel();
        boton_respuesta_2 = new javax.swing.JPanel();
        campo_texto_respuesta_2 = new javax.swing.JLabel();
        campo_texto_respuesta_b = new javax.swing.JLabel();
        boton_respuesta_4 = new javax.swing.JPanel();
        campo_texto_respuesta_4 = new javax.swing.JLabel();
        campo_texto_respuesta_d = new javax.swing.JLabel();
        campo_texto_preguntas = new javax.swing.JLabel();
        boton_comodin_50_50 = new javax.swing.JPanel();
        campo_texto_comodin_50_50 = new javax.swing.JLabel();
        boton_comodin_llamada = new javax.swing.JPanel();
        campo_texto_comodin_llamada = new javax.swing.JLabel();
        boton_regresar_inicio = new javax.swing.JPanel();
        campo_texto_comenzar = new javax.swing.JLabel();
        boton_retirarse = new javax.swing.JPanel();
        campo_texto_comenzar1 = new javax.swing.JLabel();
        campo_texto_monto_actual = new javax.swing.JLabel();
        campo_texto_zona_segura = new javax.swing.JLabel();
        campo_fecha = new javax.swing.JLabel();
        campo_hora = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel_fondo_plantila_preguntas.setBackground(new java.awt.Color(153, 153, 153));

        boton_respuesta_1.setBackground(new java.awt.Color(0, 204, 0));
        boton_respuesta_1.setForeground(new java.awt.Color(255, 255, 255));
        boton_respuesta_1.setOpaque(false);
        boton_respuesta_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_respuesta_1MousePressed(evt);
            }
        });

        campo_texto_respuesta_1.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_respuesta_1.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_respuesta_1.setText("Respuesta #1");

        campo_texto_respuesta_a.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 18)); // NOI18N
        campo_texto_respuesta_a.setForeground(new java.awt.Color(255, 255, 51));
        campo_texto_respuesta_a.setText("A:");

        javax.swing.GroupLayout boton_respuesta_1Layout = new javax.swing.GroupLayout(boton_respuesta_1);
        boton_respuesta_1.setLayout(boton_respuesta_1Layout);
        boton_respuesta_1Layout.setHorizontalGroup(
            boton_respuesta_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_respuesta_1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(campo_texto_respuesta_a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_texto_respuesta_1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );
        boton_respuesta_1Layout.setVerticalGroup(
            boton_respuesta_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_respuesta_1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(boton_respuesta_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_texto_respuesta_1)
                    .addComponent(campo_texto_respuesta_a))
                .addGap(15, 15, 15))
        );

        boton_respuesta_3.setBackground(new java.awt.Color(0, 204, 0));
        boton_respuesta_3.setForeground(new java.awt.Color(255, 255, 255));
        boton_respuesta_3.setOpaque(false);
        boton_respuesta_3.setPreferredSize(new java.awt.Dimension(195, 77));
        boton_respuesta_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_respuesta_3MousePressed(evt);
            }
        });

        campo_texto_respuesta_3.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_respuesta_3.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_respuesta_3.setText("Respuesta #3");

        campo_texto_respuesta_c.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 18)); // NOI18N
        campo_texto_respuesta_c.setForeground(new java.awt.Color(255, 255, 51));
        campo_texto_respuesta_c.setText("C:");

        javax.swing.GroupLayout boton_respuesta_3Layout = new javax.swing.GroupLayout(boton_respuesta_3);
        boton_respuesta_3.setLayout(boton_respuesta_3Layout);
        boton_respuesta_3Layout.setHorizontalGroup(
            boton_respuesta_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_respuesta_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campo_texto_respuesta_c)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_texto_respuesta_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        boton_respuesta_3Layout.setVerticalGroup(
            boton_respuesta_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_respuesta_3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(boton_respuesta_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_texto_respuesta_3)
                    .addComponent(campo_texto_respuesta_c))
                .addGap(12, 12, 12))
        );

        boton_respuesta_2.setBackground(new java.awt.Color(0, 204, 0));
        boton_respuesta_2.setForeground(new java.awt.Color(255, 255, 255));
        boton_respuesta_2.setOpaque(false);
        boton_respuesta_2.setPreferredSize(new java.awt.Dimension(195, 77));
        boton_respuesta_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_respuesta_2MousePressed(evt);
            }
        });

        campo_texto_respuesta_2.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_respuesta_2.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_respuesta_2.setText("Respuesta #2");

        campo_texto_respuesta_b.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 18)); // NOI18N
        campo_texto_respuesta_b.setForeground(new java.awt.Color(255, 255, 51));
        campo_texto_respuesta_b.setText("B:");

        javax.swing.GroupLayout boton_respuesta_2Layout = new javax.swing.GroupLayout(boton_respuesta_2);
        boton_respuesta_2.setLayout(boton_respuesta_2Layout);
        boton_respuesta_2Layout.setHorizontalGroup(
            boton_respuesta_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_respuesta_2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(campo_texto_respuesta_b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_texto_respuesta_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        boton_respuesta_2Layout.setVerticalGroup(
            boton_respuesta_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_respuesta_2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boton_respuesta_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_texto_respuesta_2)
                    .addComponent(campo_texto_respuesta_b))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        boton_respuesta_4.setBackground(new java.awt.Color(0, 204, 0));
        boton_respuesta_4.setForeground(new java.awt.Color(255, 255, 255));
        boton_respuesta_4.setOpaque(false);
        boton_respuesta_4.setPreferredSize(new java.awt.Dimension(195, 77));
        boton_respuesta_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_respuesta_4MousePressed(evt);
            }
        });

        campo_texto_respuesta_4.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_respuesta_4.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_respuesta_4.setText("Respuesta #4");

        campo_texto_respuesta_d.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 18)); // NOI18N
        campo_texto_respuesta_d.setForeground(new java.awt.Color(255, 255, 51));
        campo_texto_respuesta_d.setText("D:");

        javax.swing.GroupLayout boton_respuesta_4Layout = new javax.swing.GroupLayout(boton_respuesta_4);
        boton_respuesta_4.setLayout(boton_respuesta_4Layout);
        boton_respuesta_4Layout.setHorizontalGroup(
            boton_respuesta_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_respuesta_4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(campo_texto_respuesta_d)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_texto_respuesta_4)
                .addContainerGap(205, Short.MAX_VALUE))
        );
        boton_respuesta_4Layout.setVerticalGroup(
            boton_respuesta_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_respuesta_4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(boton_respuesta_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_texto_respuesta_4)
                    .addComponent(campo_texto_respuesta_d))
                .addGap(22, 22, 22))
        );

        campo_texto_preguntas.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 18)); // NOI18N
        campo_texto_preguntas.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_preguntas.setText("Pregunta");
        campo_texto_preguntas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        campo_texto_preguntas.setPreferredSize(new java.awt.Dimension(994, 44));

        boton_comodin_50_50.setBackground(new java.awt.Color(51, 0, 153));
        boton_comodin_50_50.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        boton_comodin_50_50.setForeground(new java.awt.Color(255, 255, 255));
        boton_comodin_50_50.setOpaque(false);
        boton_comodin_50_50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_comodin_50_50MousePressed(evt);
            }
        });

        campo_texto_comodin_50_50.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_comodin_50_50.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_comodin_50_50.setText("COMODIN 50/50");

        javax.swing.GroupLayout boton_comodin_50_50Layout = new javax.swing.GroupLayout(boton_comodin_50_50);
        boton_comodin_50_50.setLayout(boton_comodin_50_50Layout);
        boton_comodin_50_50Layout.setHorizontalGroup(
            boton_comodin_50_50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_comodin_50_50Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addComponent(campo_texto_comodin_50_50)
                .addGap(98, 98, 98))
        );
        boton_comodin_50_50Layout.setVerticalGroup(
            boton_comodin_50_50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_comodin_50_50Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(campo_texto_comodin_50_50)
                .addGap(40, 40, 40))
        );

        boton_comodin_llamada.setBackground(new java.awt.Color(153, 0, 153));
        boton_comodin_llamada.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        boton_comodin_llamada.setOpaque(false);
        boton_comodin_llamada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_comodin_llamadaMousePressed(evt);
            }
        });

        campo_texto_comodin_llamada.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_comodin_llamada.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_comodin_llamada.setText("COMODIN LLAMADA");

        javax.swing.GroupLayout boton_comodin_llamadaLayout = new javax.swing.GroupLayout(boton_comodin_llamada);
        boton_comodin_llamada.setLayout(boton_comodin_llamadaLayout);
        boton_comodin_llamadaLayout.setHorizontalGroup(
            boton_comodin_llamadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_comodin_llamadaLayout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(campo_texto_comodin_llamada)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        boton_comodin_llamadaLayout.setVerticalGroup(
            boton_comodin_llamadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_comodin_llamadaLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(campo_texto_comodin_llamada)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        boton_regresar_inicio.setBackground(new java.awt.Color(51, 0, 153));
        boton_regresar_inicio.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        boton_regresar_inicio.setForeground(new java.awt.Color(255, 255, 255));
        boton_regresar_inicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_regresar_inicioMousePressed(evt);
            }
        });

        campo_texto_comenzar.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_comenzar.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_comenzar.setText("INICIO");

        javax.swing.GroupLayout boton_regresar_inicioLayout = new javax.swing.GroupLayout(boton_regresar_inicio);
        boton_regresar_inicio.setLayout(boton_regresar_inicioLayout);
        boton_regresar_inicioLayout.setHorizontalGroup(
            boton_regresar_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_regresar_inicioLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(campo_texto_comenzar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        boton_regresar_inicioLayout.setVerticalGroup(
            boton_regresar_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_regresar_inicioLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(campo_texto_comenzar)
                .addGap(15, 15, 15))
        );

        boton_retirarse.setBackground(new java.awt.Color(51, 0, 153));
        boton_retirarse.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        boton_retirarse.setForeground(new java.awt.Color(255, 255, 255));
        boton_retirarse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton_retirarseMousePressed(evt);
            }
        });

        campo_texto_comenzar1.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_comenzar1.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_comenzar1.setText("RETIRARSE");

        javax.swing.GroupLayout boton_retirarseLayout = new javax.swing.GroupLayout(boton_retirarse);
        boton_retirarse.setLayout(boton_retirarseLayout);
        boton_retirarseLayout.setHorizontalGroup(
            boton_retirarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boton_retirarseLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(campo_texto_comenzar1)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        boton_retirarseLayout.setVerticalGroup(
            boton_retirarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boton_retirarseLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(campo_texto_comenzar1)
                .addGap(17, 17, 17))
        );

        campo_texto_monto_actual.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_monto_actual.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_monto_actual.setText(" ");

        campo_texto_zona_segura.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_texto_zona_segura.setForeground(new java.awt.Color(255, 255, 255));
        campo_texto_zona_segura.setText(" ");

        campo_fecha.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_fecha.setForeground(new java.awt.Color(255, 255, 255));
        campo_fecha.setText("dd/MM/YYY");

        campo_hora.setFont(new java.awt.Font("Yu Mincho Demibold", 1, 14)); // NOI18N
        campo_hora.setForeground(new java.awt.Color(255, 255, 255));
        campo_hora.setText("00:00:00");
        campo_hora.setToolTipText("");

        javax.swing.GroupLayout panel_fondo_plantila_preguntasLayout = new javax.swing.GroupLayout(panel_fondo_plantila_preguntas);
        panel_fondo_plantila_preguntas.setLayout(panel_fondo_plantila_preguntasLayout);
        panel_fondo_plantila_preguntasLayout.setHorizontalGroup(
            panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                        .addComponent(campo_texto_preguntas, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                        .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_respuesta_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boton_respuesta_3, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_respuesta_2, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(boton_respuesta_4, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(97, 97, 97))))
            .addGroup(panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                .addComponent(boton_comodin_50_50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boton_comodin_llamada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                        .addComponent(campo_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campo_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(642, 642, 642))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                        .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(campo_texto_zona_segura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campo_texto_monto_actual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(500, 500, 500)))
                .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton_retirarse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_regresar_inicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );
        panel_fondo_plantila_preguntasLayout.setVerticalGroup(
            panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_comodin_50_50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_comodin_llamada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                        .addComponent(boton_regresar_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_retirarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_fondo_plantila_preguntasLayout.createSequentialGroup()
                        .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campo_fecha)
                            .addComponent(campo_hora))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campo_texto_monto_actual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campo_texto_zona_segura)
                        .addGap(61, 61, 61)))
                .addComponent(campo_texto_preguntas, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_respuesta_1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_respuesta_2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(panel_fondo_plantila_preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton_respuesta_3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_respuesta_4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        getContentPane().add(panel_fondo_plantila_preguntas, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1030, 640));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void boton_comodin_50_50MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_comodin_50_50MousePressed

        
        // Se obtienen los valores de las respuestas de cada Jlabel correspondiente
        respuesta_a = campo_texto_respuesta_1.getText();
        respuesta_b = campo_texto_respuesta_2.getText();
        respuesta_c = campo_texto_respuesta_3.getText();
        respuesta_d = campo_texto_respuesta_4.getText();

        // Evalua la posicion de la respuesta para el comodin y oculta las que no
        // corresponden
        if (millonario_correctas[posicion_random_entera][1] == respuesta_a
                || millonario_correctas[posicion_random_entera][1] == respuesta_d) {
            // Oculta las respuesta B y C en caso de que la respuesta correcta sea A ó B
            campo_texto_respuesta_2.setVisible(false);
            campo_texto_respuesta_3.setVisible(false);

        } else if (millonario_correctas[posicion_random_entera][1] == respuesta_b
                || millonario_correctas[posicion_random_entera][1] == respuesta_c) {
            // Oculta las respuesta A y D en caso de que la respuesta correcta sea B ó C
            campo_texto_respuesta_1.setVisible(false);
            campo_texto_respuesta_4.setVisible(false);

        }
        // Oculta el comodin 50/50 ya que solamente es de un solo uso
        boton_comodin_50_50.setVisible(false);
    }//GEN-LAST:event_boton_comodin_50_50MousePressed
    public void hora(){
        Calendar calendario = new GregorianCalendar(); // Se intancia el calendario con la subclase Calendar() y la
                                                       // clase GregorianCalendar()
        Date hora_actual = new Date(); // Se instancia la hora actual con la clase Date()
        calendario.setTime(hora_actual); // Se convierte el instanciamiento a tiempo para poder obtener la hora actual
        hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY)
                : "0" + calendario.get(Calendar.HOUR_OF_DAY);// Se obtiene el valor de hora
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE)
                : "0" + calendario.get(Calendar.MINUTE);// Se obtiene el valor de minutos
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND)
                : "0" + calendario.get(Calendar.SECOND);// Se obtiene el valor de segundos
    }
    
    public void run(){
        Thread current = Thread.currentThread(); //Se declara un hilo actual para poder correr la hora actual
        //Se corre la actualizacion de la hora mientras que el hilo se encuentre activo
        while (current == hilo){
            hora();
            //Se cambia el texto del jlabel de hora para mostrarlo en el Jframe
            campo_hora.setText(hora+":"+minutos+":"+segundos);
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Inicializacion de plantilla de preguntas

        // Muestra fecha

        Date fecha = new Date();// Se obtiene la fecha actual mediante el instanciamiento del clase Date()
        SimpleDateFormat formato_fecha = new SimpleDateFormat("dd/MM/YYY");// Se declara el formato para la fecha
                                                                           // mediante el instanciamento del clase
                                                                           // SimpleDateFormat()
        campo_fecha.setText(formato_fecha.format(fecha));// Se da el formato a la fecha actual

        

        try {
            // Se solicita el nombre del jugador
            nombre_jugador = JOptionPane.showInputDialog(null, "Nombre del jugador:", "Datos Jugador",
                    JOptionPane.INFORMATION_MESSAGE);
            while (nombre_jugador.equals("")) {

                try {
                    // Se solicita el nombre del jugador
                    nombre_jugador = JOptionPane.showInputDialog(null, "Nombre del jugador:", "Datos Jugador",
                            JOptionPane.INFORMATION_MESSAGE);

                } catch (NullPointerException e) {
                   panel_inicio.setVisible(true);
                   hilo.stop();
                   dispose();
                }

            }
            
        } catch (NullPointerException e) {
            panel_inicio.setVisible(true);
                   hilo.stop();
                   dispose();
        }
        
        

        // Al iniciar el panel se hacen visibles los jpanel que contienen las preguntas
        // y
        // respuestas
        boton_comodin_50_50.setVisible(true);
        campo_texto_respuesta_1.setVisible(true);
        campo_texto_respuesta_2.setVisible(true);
        campo_texto_respuesta_3.setVisible(true);
        campo_texto_respuesta_4.setVisible(true);
        // Varible de contador global de las preguntas y evitar que se generen mas
        // preguntas que las que no corresponden
        contador_global = 0;
        // Creacion de matriz millonario se definen 15 filas y 5 columnas para guardar
        // las preguntas y respuestas totales

        millonario[0][0] = "Complete el siguiente dicho popular: 'Tanto va el cántaro a la fuente hasta que...':";// Pregunta
                                                                                                                  // #1
        millonario[0][1] = "Se embellece";
        millonario[0][2] = "Se cansa";
        millonario[0][3] = "Se encoge";
        millonario[0][4] = "Se rompe";// Respuesta correcta pregunta #1
        millonario[1][0] = "¿Cuál de los siguientes animales tiene por costumbre cazar en manada?";// Pregunta #2
        millonario[1][1] = "La araña";
        millonario[1][2] = "El leon";// Respuesta correcta pregunta #2
        millonario[1][3] = "La serpiente";
        millonario[1][4] = "El gato";
        millonario[2][0] = "En nuestro país, a las tinajas ocultas o enterradas, llenas de dinero, se les conoce como:";// Pregunta
                                                                                                                        // #3
        millonario[2][1] = "Botijas";// Respuesta correcta pregunta #3
        millonario[2][2] = "Catalejos";
        millonario[2][3] = "Fuelles";
        millonario[2][4] = "Calesas";
        millonario[3][0] = "¿En qué país será la próxima Copa Mundial de Fútbol 2022?";// Pregunta #4
        millonario[3][1] = "Singapur";
        millonario[3][2] = "Catar";// Respuesta correcta pregunta #4
        millonario[3][3] = "Nepal";
        millonario[3][4] = "Arabia Saudita";
        millonario[4][0] = "¿Cuál es el nombre del siguiente tango?";// Pregunta #5
        millonario[4][1] = "El día que me quieras";
        millonario[4][2] = "Volver";
        millonario[4][3] = "La cumparsita";
        millonario[4][4] = "Por una cabeza";// Respuesta correcta pregunta #5
        millonario[5][0] = "Cuando algo es conocido y aceptado por todos utilizamos la expresión latina:";// Pregunta #6
        millonario[5][1] = "Carpe diem";
        millonario[5][2] = "Vox populi";// Respuesta correcta pregunta #6
        millonario[5][3] = "Cogito ergo sum";
        millonario[5][4] = "Ipso facto";
        millonario[6][0] = "Rafael Ángel “Felo” García, además de pintor y arquitecto, fue jugador profesional de:";// Pregunta
                                                                                                                    // #7
        millonario[6][1] = "Baloncesto";
        millonario[6][2] = "Voleibol";
        millonario[6][3] = "Fútbol";// Respuesta correcta pregunta #7
        millonario[6][4] = "Beisbol";
        millonario[7][0] = "¿Cuál famosa botica se ubicó al costado sur del parque central de San José?";// Pregunta #8
        millonario[7][1] = "Botica Francesa";// Respuesta correcta pregunta #8
        millonario[7][2] = "Botica Solera";
        millonario[7][3] = "Botica internacional";
        millonario[7][4] = "Botica San José";
        millonario[8][0] = "Los idiomas español, francés e italiano pertenecen al grupo de lenguas:";// Pregunta #9
        millonario[8][1] = "Drádivas";
        millonario[8][2] = "Mayenses";
        millonario[8][3] = "Germanicas";
        millonario[8][4] = "Romances";// Respuesta correcta pregunta #9
        millonario[9][0] = "¿Cuál de estos territorios indígenas es el más cercano a la ciudad de San José?";// Pregunta
                                                                                                             // #10
        millonario[9][1] = "Matambú";
        millonario[9][2] = "Quitirrisí";// Respuesta correcta pregunta #10
        millonario[9][3] = "Telire";
        millonario[9][4] = "Ujarrás";
        millonario[10][0] = "El humedal más grande del mundo, ubicado en Brasil, se llama:";// Pregunta #11
        millonario[10][1] = "Esteros del Iberá";
        millonario[10][2] = "Pantanal";// Respuesta correcta pregunta #11
        millonario[10][3] = "Delta del Okavango";
        millonario[10][4] = "Río Negro";
        millonario[11][0] = "Esta escultura, en el frontón de la Corte Suprema de Justicia, es obra del costarricense:";// Pregunta
                                                                                                                        // #12
        millonario[11][1] = "Juan Ramón Bonilla";
        millonario[11][2] = "Ólger Villegas";
        millonario[11][3] = "Juan Portuguez";// Respuesta correcta pregunta #12
        millonario[11][4] = "Francisco Zúñiga";
        millonario[12][0] = "¿Cuál, de los siguientes mamíferos, tiene solo seis vértebras cervicales?";// Pregunta #13
        millonario[12][1] = "La jirafa";
        millonario[12][2] = "El perro";
        millonario[12][3] = "El manatí";// Respuesta correcta pregunta #13
        millonario[12][4] = "La ballena";
        millonario[13][0] = "El primer país donde residió Juan Domingo Perón, luego del golpe militar, fue:";// Pregunta
                                                                                                             // #14
        millonario[13][1] = "Panamá";
        millonario[13][2] = "México";
        millonario[13][3] = "Paraguay";// Respuesta correcta pregunta #14
        millonario[13][4] = "España";
        millonario[14][0] = "'Dio su vida por las libertades de Costa Rica' es el epitafio en la tumba de:";// Pregunta
                                                                                                            // #15
        millonario[14][1] = "Pancha Carrasco Jiménez";
        millonario[14][2] = "José María Cañas Escamilla";
        millonario[14][3] = "Juan Rafael Mora Porras";
        millonario[14][4] = "Marcelino García Flamenco";// Respuesta correcta pregunta #15

        // Creacion de matriz millonario_correctas se definen 15 filas y 2 columnas para
        // guardar las preguntas y respuestas correctas

        millonario_correctas[0][0] = "Complete el siguiente dicho popular: 'Tanto va el cántaro a la fuente hasta que...':";// Pregunta
                                                                                                                            // #1
        millonario_correctas[0][1] = "Se rompe";// Respuesta correcta pregunta #1
        millonario_correctas[1][0] = "¿Cuál de los siguientes animales tiene por costumbre cazar en manada?";// Pregunta
                                                                                                             // #2
        millonario_correctas[1][1] = "El leon";// Respuesta correcta pregunta #2
        millonario_correctas[2][0] = "En nuestro país, a las tinajas ocultas o enterradas, llenas de dinero, se les conoce como:";// Pregunta
                                                                                                                                  // #3
        millonario_correctas[2][1] = "Botijas";// Respuesta correcta pregunta #3
        millonario_correctas[3][0] = "¿En qué país será la próxima Copa Mundial de Fútbol 2022?";// Pregunta #4
        millonario_correctas[3][1] = "Catar";// Respuesta correcta pregunta #4
        millonario_correctas[4][0] = "¿Cuál es el nombre del siguiente tango?";// Pregunta #5
        millonario_correctas[4][1] = "Por una cabeza";// Respuesta correcta pregunta #5
        millonario_correctas[5][0] = "Cuando algo es conocido y aceptado por todos utilizamos la expresión latina:";// Pregunta
                                                                                                                    // #6
        millonario_correctas[5][1] = "Vox populi";// Respuesta correcta pregunta #6
        millonario_correctas[6][0] = "Rafael Ángel “Felo” García, además de pintor y arquitecto, fue jugador profesional de:";// Pregunta
                                                                                                                              // #7
        millonario_correctas[6][1] = "Fútbol";// Respuesta correcta pregunta #7
        millonario_correctas[7][0] = "¿Cuál famosa botica se ubicó al costado sur del parque central de San José?";// Pregunta
                                                                                                                   // #8
        millonario_correctas[7][1] = "Botica Francesa";// Respuesta correcta pregunta #8
        millonario_correctas[8][0] = "Los idiomas español, francés e italiano pertenecen al grupo de lenguas:";// Pregunta
                                                                                                               // #9
        millonario_correctas[8][1] = "Romances";// Respuesta correcta pregunta #9
        millonario_correctas[9][0] = "¿Cuál de estos territorios indígenas es el más cercano a la ciudad de San José?";// Pregunta
                                                                                                                       // #10
        millonario_correctas[9][1] = "Quitirrisí";// Respuesta correcta pregunta #10
        millonario_correctas[10][0] = "El humedal más grande del mundo, ubicado en Brasil, se llama:";// Pregunta #11
        millonario_correctas[10][1] = "Pantanal";// Respuesta correcta pregunta #11
        millonario_correctas[11][0] = "Esta escultura, en el frontón de la Corte Suprema de Justicia, es obra del costarricense:";// Pregunta
                                                                                                                                  // #12
        millonario_correctas[11][1] = "Juan Portuguez";// Respuesta correcta pregunta #12
        millonario_correctas[12][0] = "¿Cuál, de los siguientes mamíferos, tiene solo seis vértebras cervicales?";// Pregunta
                                                                                                                  // #13
        millonario_correctas[12][1] = "El manatí";// Respuesta correcta pregunta #13
        millonario_correctas[13][0] = "El primer país donde residió Juan Domingo Perón, luego del golpe militar, fue:";// Pregunta
                                                                                                                       // #14
        millonario_correctas[13][1] = "Paraguay";// Respuesta correcta pregunta #14
        millonario_correctas[14][0] = "'Dio su vida por las libertades de Costa Rica' es el epitafio en la tumba de:";// Pregunta
                                                                                                                      // #15
        millonario_correctas[14][1] = "Marcelino García Flamenco";// Respuesta correcta pregunta #15

        // Asignacion del valor de las preguntas
        valor_preguntas[0][0] = 100000; // Pregunta #1
        valor_preguntas[1][0] = 250000; // Pregunta #2
        valor_preguntas[2][0] = 500000; // Pregunta #3
        valor_preguntas[3][0] = 750000; // Pregunta #4
        valor_preguntas[4][0] = 1000000; // Pregunta #5
        valor_preguntas[5][0] = 2000000; // Pregunta #6
        valor_preguntas[6][0] = 2500000; // Pregunta #7
        valor_preguntas[7][0] = 3000000; // Pregunta #8
        valor_preguntas[8][0] = 5000000; // Pregunta #9
        valor_preguntas[9][0] = 7500000; // Pregunta #10
        valor_preguntas[10][0] = 10000000; // Pregunta #11
        valor_preguntas[11][0] = 12000000; // Pregunta #12
        valor_preguntas[12][0] = 15000000; // Pregunta #13
        valor_preguntas[13][0] = 20000000; // Pregunta #14
        valor_preguntas[14][0] = 25000000; // Pregunta #15

        // Calcular la posicion de la pregunta al azar que se requiera
        posicion_random = Math.random() * 15;
        // Convertir la posicion Double a Int para obtener la posicion correcta
        posicion_random_entera = (int) posicion_random;
        // Cambiar el texto del jlabel para indicar la pregunta aleatoria
        campo_texto_preguntas.setText((contador_global + 1) + ". " + millonario[posicion_random_entera][0]);
        // Cambiar los campos de las respuestas que corresponda a la pregunta
        campo_texto_respuesta_1.setText(millonario[(posicion_random_entera)][1]);
        campo_texto_respuesta_2.setText(millonario[(posicion_random_entera)][2]);
        campo_texto_respuesta_3.setText(millonario[(posicion_random_entera)][3]);
        campo_texto_respuesta_4.setText(millonario[(posicion_random_entera)][4]);
        preguntas_realizadas[contador_global][0] = millonario[posicion_random_entera][0];

        // Eliminar la pregunta del array para evitar que se repitan
        millonario[posicion_random_entera][0] = "Realizada";
    }//GEN-LAST:event_formWindowOpened

    private void boton_regresar_inicioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_regresar_inicioMousePressed
        // Confirmación de pregunta
        confirmación_pregunta = JOptionPane.showConfirmDialog(this,
                "¿Desea volver al inicio? Si regresa al inicio del juego se va a reiniciar", "Confirmación",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (confirmación_pregunta == JOptionPane.YES_OPTION) {
            panel_inicio.setVisible(true);
            hilo.stop();
            dispose();

        }
    }//GEN-LAST:event_boton_regresar_inicioMousePressed

    private void boton_respuesta_1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_respuesta_1MousePressed
        // Valida que la respuesta se encuentre activa
        if (campo_texto_respuesta_1.isVisible() == true) {
            campo_texto_respuesta_1.setForeground(new Color(255, 213, 0));
            // Se obtienen los valores de las respuestas de cada Jlabel correspondiente
            respuesta_a = campo_texto_respuesta_1.getText();
            // Confirmación de pregunta
            confirmación_pregunta = JOptionPane.showConfirmDialog(this, "¿Respuesta definitiva?", "Confirmación",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (confirmación_pregunta == JOptionPane.YES_OPTION) {
                // Evalua la posicion de la respuesta para el comodin y oculta las que no
                // corresponden

                if (millonario_correctas[posicion_random_entera][1] == respuesta_a) {

                    // Se aumenta el contador de las preguntas
                    contador_global++;

                    // Se valida que el contador sea menor a la cantidad de preguntas en caso de ser
                    // mayor el juego terminara
                    if (contador_global < 15) {
                        // Calcular la posicion de la pregunta al azar que se requiera
                        posicion_random = Math.random() * 15;
                        // Convertir la posicion Double a Int para obtener la posicion correcta
                        posicion_random_entera = (int) posicion_random;

                        // Validar que la pregunta no este realizada y generar una nueva posicion hasta
                        // que sea diferente
                        while (millonario[posicion_random_entera][0] == "Realizada") {
                            // Calcular la posicion de la pregunta al azar que se requiera
                            posicion_random = Math.random() * 15;
                            // Convertir la posicion Double a Int para obtener la posicion correcta
                            posicion_random_entera = (int) posicion_random;

                        }

                        // Cambiar el texto del jlabel para indicar la pregunta aleatoria
                        campo_texto_preguntas
                                .setText((contador_global + 1) + ". " + millonario[posicion_random_entera][0]);
                        // Cambiar los campos de las respuestas que corresponda a la pregunta
                        campo_texto_respuesta_1.setText(millonario[(posicion_random_entera)][1]);
                        campo_texto_respuesta_2.setText(millonario[(posicion_random_entera)][2]);
                        campo_texto_respuesta_3.setText(millonario[(posicion_random_entera)][3]);
                        campo_texto_respuesta_4.setText(millonario[(posicion_random_entera)][4]);
                        preguntas_realizadas[contador_global][0] = millonario[posicion_random_entera][0];
                        // Eliminar la pregunta del array para evitar que se repitan
                        millonario[posicion_random_entera][0] = "Realizada";
                        // Se vuelven a activar las respuestas para la siguiente pregunta
                        campo_texto_respuesta_1.setVisible(true);
                        campo_texto_respuesta_2.setVisible(true);
                        campo_texto_respuesta_3.setVisible(true);
                        campo_texto_respuesta_4.setVisible(true);

                        // Vericacion de zona segura para mostrar en pantalla
                        if (contador_global > 4 && contador_global < 7) {
                            zona_segura = "1 monto " + currencyFormatter.format(valor_preguntas[4][0]) + " colones";
                        } else if (contador_global > 7 && contador_global < 9) {
                            zona_segura = "2 monto " + currencyFormatter.format(valor_preguntas[7][0]) + " colones";
                        } else if (contador_global > 9 && contador_global < 12) {
                            zona_segura = "3 monto " + currencyFormatter.format(valor_preguntas[9][0]) + " colones";
                        } else if (contador_global > 12) {
                            zona_segura = "4 monto " + currencyFormatter.format(valor_preguntas[12][0]) + " colones";
                        }
                        // Valida que la pregunta sea mayor a la 5 para indicar el monto acumulado y la
                        // zona segura
                        if (contador_global > 4) {
                            // Indicacion del monto de la pregunta actual
                            campo_texto_monto_actual.setText("Monto actual "
                                    + currencyFormatter.format(valor_preguntas[contador_global - 1][0]) + " colones");
                            campo_texto_zona_segura.setText("Zona segura " + zona_segura);
                        }
                    } else {
                        // Todos los campos de pregunta y respuestas se borran ya que no quedan mas que
                        // realizar
                        JOptionPane.showMessageDialog(null,
                                "Usted ha ganado ¿Quién quiere ser millonario?\nha ganado la cantidad de "
                                        + currencyFormatter.format(valor_preguntas[14][0]) + " colones",
                                "", JOptionPane.INFORMATION_MESSAGE);
                        guardar_ganador(nombre_jugador, valor_preguntas[14][0]);
                        // Volver al menu principal
                        panel_inicio.setVisible(true);
                        hilo.stop();
                        dispose();

                    }
                    // Evalua si la respuetas es correcta o bien se encuentra en las zonas seguras
                    // 5,8,10,13 en caso de ser asi el juego terminara y indicara el monto de la
                    // zona segura
                } else if (contador_global > 4 && contador_global < 7) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[4][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[4][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 7 && contador_global < 9) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[7][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[7][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 9 && contador_global < 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[9][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[9][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[12][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[12][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else {
                    // Se indica que al jugador que ha perdido y lo lleva al menu de inicio
                    JOptionPane.showMessageDialog(null, "Respuesta incorrecta usted ha perdido", "",
                            JOptionPane.WARNING_MESSAGE);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                }

            } // Final Si
            campo_texto_respuesta_1.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_boton_respuesta_1MousePressed

    private void boton_respuesta_2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_respuesta_2MousePressed
        // Valida que la respuesta se encuentre activa
        if (campo_texto_respuesta_2.isVisible() == true) {
            campo_texto_respuesta_2.setForeground(new Color(255, 213, 0));
            // Se obtienen los valores de las respuestas de cada Jlabel correspondiente
            respuesta_b = campo_texto_respuesta_2.getText();
            // Confirmación de pregunta
            confirmación_pregunta = JOptionPane.showConfirmDialog(this, "¿Respuesta definitiva?", "Confirmación",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (confirmación_pregunta == JOptionPane.YES_OPTION) {
                // Evalua la posicion de la respuesta para el comodin y oculta las que no
                // corresponden
                // Evalua si la respuetas es correcta o bien se encuentra en las zonas seguras
                // 5,8,10,13 en caso de ser asi este continuara con el juego
                if (millonario_correctas[posicion_random_entera][1] == respuesta_b) {
                    // Se aumenta el contador de las preguntas
                    contador_global++;

                    // Se valida que el contador sea menor a la cantidad de preguntas en caso de ser
                    // mayor el juego terminara
                    if (contador_global < 15) {
                        // Calcular la posicion de la pregunta al azar que se requiera
                        posicion_random = Math.random() * 15;
                        // Convertir la posicion Double a Int para obtener la posicion correcta
                        posicion_random_entera = (int) posicion_random;

                        // Validar que la pregunta no este realizada y generar una nueva posicion hasta
                        // que sea diferente
                        while (millonario[posicion_random_entera][0] == "Realizada") {
                            // Calcular la posicion de la pregunta al azar que se requiera
                            posicion_random = Math.random() * 15;
                            // Convertir la posicion Double a Int para obtener la posicion correcta
                            posicion_random_entera = (int) posicion_random;

                        }

                        // Cambiar el texto del jlabel para indicar la pregunta aleatoria
                        campo_texto_preguntas
                                .setText((contador_global + 1) + ". " + millonario[posicion_random_entera][0]);
                        // Cambiar los campos de las respuestas que corresponda a la pregunta
                        campo_texto_respuesta_1.setText(millonario[(posicion_random_entera)][1]);
                        campo_texto_respuesta_2.setText(millonario[(posicion_random_entera)][2]);
                        campo_texto_respuesta_3.setText(millonario[(posicion_random_entera)][3]);
                        campo_texto_respuesta_4.setText(millonario[(posicion_random_entera)][4]);
                        preguntas_realizadas[contador_global][0] = millonario[posicion_random_entera][0];
                        // Eliminar la pregunta del array para evitar que se repitan
                        millonario[posicion_random_entera][0] = "Realizada";
                        // Se vuelven a activar las respuestas para la siguiente pregunta
                        campo_texto_respuesta_1.setVisible(true);
                        campo_texto_respuesta_2.setVisible(true);
                        campo_texto_respuesta_3.setVisible(true);
                        campo_texto_respuesta_4.setVisible(true);

                        // Vericacion de zona segura para mostrar en pantalla
                        if (contador_global > 4 && contador_global < 7) {
                            zona_segura = "1 monto " + currencyFormatter.format(valor_preguntas[4][0]) + " colones";
                        } else if (contador_global > 7 && contador_global < 9) {
                            zona_segura = "2 monto " + currencyFormatter.format(valor_preguntas[7][0]) + " colones";
                        } else if (contador_global > 9 && contador_global < 12) {
                            zona_segura = "3 monto " + currencyFormatter.format(valor_preguntas[9][0]) + " colones";
                        } else if (contador_global > 12) {
                            zona_segura = "4 monto " + currencyFormatter.format(valor_preguntas[12][0]) + " colones";
                        }
                        // Valida que la pregunta sea mayor a la 5 para indicar el monto acumulado y la
                        // zona segura
                        if (contador_global > 4) {
                            // Indicacion del monto de la pregunta actual
                            campo_texto_monto_actual.setText("Monto actual "
                                    + currencyFormatter.format(valor_preguntas[contador_global - 1][0]) + " colones");
                            campo_texto_zona_segura.setText("Zona segura " + zona_segura);
                        }
                    } else {
                        // Todos los campos de pregunta y respuestas se borran ya que no quedan mas que
                        // realizar
                        JOptionPane.showMessageDialog(null,
                                "Usted ha ganado ¿Quién quiere ser millonario?\nha ganado la cantidad de "
                                        + currencyFormatter.format(valor_preguntas[14][0]) + " colones",
                                "", JOptionPane.INFORMATION_MESSAGE);
                        guardar_ganador(nombre_jugador, valor_preguntas[14][0]);
                        // Volver al menu principal
                        panel_inicio.setVisible(true);
                        hilo.stop();
                        dispose();

                    }
                    // Evalua si la respuetas es correcta o bien se encuentra en las zonas seguras
                    // 5,8,10,13 en caso de ser asi el juego terminara y indicara el monto de la
                    // zona segura
                } else if (contador_global > 4 && contador_global < 7) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[4][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[4][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 7 && contador_global < 9) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[7][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[7][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 9 && contador_global < 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[9][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[9][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[12][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[12][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else {
                    // Se indica que al jugador que ha perdido y lo lleva al menu de inicio
                    JOptionPane.showMessageDialog(null, "Respuesta incorrecta usted ha perdido", "",
                            JOptionPane.WARNING_MESSAGE);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                }

            } // Final Si
            campo_texto_respuesta_2.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_boton_respuesta_2MousePressed

    private void boton_respuesta_3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_respuesta_3MousePressed
        // Valida que la respuesta se encuentre activa
        if (campo_texto_respuesta_3.isVisible() == true) {
            campo_texto_respuesta_3.setForeground(new Color(255, 213, 0));
            // Se obtienen los valores de las respuestas de cada Jlabel correspondiente
            respuesta_c = campo_texto_respuesta_3.getText();
            // Confirmación de pregunta
            confirmación_pregunta = JOptionPane.showConfirmDialog(this, "¿Respuesta definitiva?", "Confirmación",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (confirmación_pregunta == JOptionPane.YES_OPTION) {
                // Evalua la posicion de la respuesta para el comodin y oculta las que no
                // corresponden
                // Evalua si la respuetas es correcta o bien se encuentra en las zonas seguras
                // 5,8,10,13 en caso de ser asi este continuara con el juego
                if (millonario_correctas[posicion_random_entera][1] == respuesta_c) {
                    // Se aumenta el contador de las preguntas
                    contador_global++;

                    // Se valida que el contador sea menor a la cantidad de preguntas en caso de ser
                    // mayor el juego terminara
                    if (contador_global < 15) {
                        // Calcular la posicion de la pregunta al azar que se requiera
                        posicion_random = Math.random() * 15;
                        // Convertir la posicion Double a Int para obtener la posicion correcta
                        posicion_random_entera = (int) posicion_random;

                        // Validar que la pregunta no este realizada y generar una nueva posicion hasta
                        // que sea diferente
                        while (millonario[posicion_random_entera][0] == "Realizada") {
                            // Calcular la posicion de la pregunta al azar que se requiera
                            posicion_random = Math.random() * 15;
                            // Convertir la posicion Double a Int para obtener la posicion correcta
                            posicion_random_entera = (int) posicion_random;

                        }

                        // Cambiar el texto del jlabel para indicar la pregunta aleatoria
                        campo_texto_preguntas
                                .setText((contador_global + 1) + ". " + millonario[posicion_random_entera][0]);
                        // Cambiar los campos de las respuestas que corresponda a la pregunta
                        campo_texto_respuesta_1.setText(millonario[(posicion_random_entera)][1]);
                        campo_texto_respuesta_2.setText(millonario[(posicion_random_entera)][2]);
                        campo_texto_respuesta_3.setText(millonario[(posicion_random_entera)][3]);
                        campo_texto_respuesta_4.setText(millonario[(posicion_random_entera)][4]);
                        preguntas_realizadas[contador_global][0] = millonario[posicion_random_entera][0];
                        // Eliminar la pregunta del array para evitar que se repitan
                        millonario[posicion_random_entera][0] = "Realizada";
                        // Se vuelven a activar las respuestas para la siguiente pregunta
                        campo_texto_respuesta_1.setVisible(true);
                        campo_texto_respuesta_2.setVisible(true);
                        campo_texto_respuesta_3.setVisible(true);
                        campo_texto_respuesta_4.setVisible(true);
                        // Vericacion de zona segura para mostrar en pantalla
                        if (contador_global > 4 && contador_global < 7) {
                            zona_segura = "1 monto " + currencyFormatter.format(valor_preguntas[4][0]) + " colones";
                        } else if (contador_global > 7 && contador_global < 9) {
                            zona_segura = "2 monto " + currencyFormatter.format(valor_preguntas[7][0]) + " colones";
                        } else if (contador_global > 9 && contador_global < 12) {
                            zona_segura = "3 monto " + currencyFormatter.format(valor_preguntas[9][0]) + " colones";
                        } else if (contador_global > 12) {
                            zona_segura = "4 monto " + currencyFormatter.format(valor_preguntas[12][0]) + " colones";
                        }
                        // Valida que la pregunta sea mayor a la 5 para indicar el monto acumulado y la
                        // zona segura
                        if (contador_global > 4) {
                            // Indicacion del monto de la pregunta actual
                            campo_texto_monto_actual.setText("Monto actual "
                                    + currencyFormatter.format(valor_preguntas[contador_global - 1][0]) + " colones");
                            campo_texto_zona_segura.setText("Zona segura " + zona_segura);
                        }
                    } else {
                        // Todos los campos de pregunta y respuestas se borran ya que no quedan mas que
                        // realizar
                        JOptionPane.showMessageDialog(null,
                                "Usted ha ganado ¿Quién quiere ser millonario?\nha ganado la cantidad de "
                                        + currencyFormatter.format(valor_preguntas[14][0]) + " colones",
                                "", JOptionPane.INFORMATION_MESSAGE);
                        guardar_ganador(nombre_jugador, valor_preguntas[14][0]);
                        // Volver al menu principal
                        panel_inicio.setVisible(true);
                        hilo.stop();
                        dispose();

                    }
                    // Evalua si la respuetas es correcta o bien se encuentra en las zonas seguras
                    // 5,8,10,13 en caso de ser asi el juego terminara y indicara el monto de la
                    // zona segura
                } else if (contador_global > 4 && contador_global < 7) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[4][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[4][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 7 && contador_global < 9) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[7][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[7][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 9 && contador_global < 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[9][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[9][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[12][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[12][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else {
                    // Se indica que al jugador que ha perdido y lo lleva al menu de inicio
                    JOptionPane.showMessageDialog(null, "Respuesta incorrecta usted ha perdido", "",
                            JOptionPane.WARNING_MESSAGE);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                }

            } // Final Si
            campo_texto_respuesta_3.setForeground(new Color(255, 255, 255));
        }

    }//GEN-LAST:event_boton_respuesta_3MousePressed

    private void boton_respuesta_4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_respuesta_4MousePressed
         // Valida que la respuesta se encuentre activa
        if (campo_texto_respuesta_4.isVisible() == true) {
            campo_texto_respuesta_4.setForeground(new Color(255, 213, 0));
            // Se obtienen los valores de las respuestas de cada Jlabel correspondiente
            respuesta_d = campo_texto_respuesta_4.getText();
            // Confirmación de pregunta
            confirmación_pregunta = JOptionPane.showConfirmDialog(this, "¿Respuesta definitiva?", "Confirmación",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (confirmación_pregunta == JOptionPane.YES_OPTION) {
                // Evalua la posicion de la respuesta para el comodin y oculta las que no
                // corresponden
                // Evalua si la respuetas es correcta o bien se encuentra en las zonas seguras
                // 5,8,10,13 en caso de ser asi este continuara con el juego
                if (millonario_correctas[posicion_random_entera][1] == respuesta_d) {
                    // Se aumenta el contador de las preguntas
                    contador_global++;

                    // Se valida que el contador sea menor a la cantidad de preguntas en caso de ser
                    // mayor el juego terminara
                    if (contador_global < 15) {
                        // Calcular la posicion de la pregunta al azar que se requiera
                        posicion_random = Math.random() * 15;
                        // Convertir la posicion Double a Int para obtener la posicion correcta
                        posicion_random_entera = (int) posicion_random;

                        // Validar que la pregunta no este realizada y generar una nueva posicion hasta
                        // que sea diferente
                        while (millonario[posicion_random_entera][0] == "Realizada") {
                            // Calcular la posicion de la pregunta al azar que se requiera
                            posicion_random = Math.random() * 15;
                            // Convertir la posicion Double a Int para obtener la posicion correcta
                            posicion_random_entera = (int) posicion_random;

                        }

                        // Cambiar el texto del jlabel para indicar la pregunta aleatoria
                        campo_texto_preguntas
                                .setText((contador_global + 1) + ". " + millonario[posicion_random_entera][0]);
                        // Cambiar los campos de las respuestas que corresponda a la pregunta
                        campo_texto_respuesta_1.setText(millonario[(posicion_random_entera)][1]);
                        campo_texto_respuesta_2.setText(millonario[(posicion_random_entera)][2]);
                        campo_texto_respuesta_3.setText(millonario[(posicion_random_entera)][3]);
                        campo_texto_respuesta_4.setText(millonario[(posicion_random_entera)][4]);
                        preguntas_realizadas[contador_global][0] = millonario[posicion_random_entera][0];
                        // Eliminar la pregunta del array para evitar que se repitan
                        millonario[posicion_random_entera][0] = "Realizada";
                        // Se vuelven a activar las respuestas para la siguiente pregunta
                        campo_texto_respuesta_1.setVisible(true);
                        campo_texto_respuesta_2.setVisible(true);
                        campo_texto_respuesta_3.setVisible(true);
                        campo_texto_respuesta_4.setVisible(true);
                        // Vericacion de zona segura para mostrar en pantalla
                        if (contador_global > 4 && contador_global < 7) {
                            zona_segura = "1 monto " + currencyFormatter.format(valor_preguntas[4][0]) + " colones";
                        } else if (contador_global > 7 && contador_global < 9) {
                            zona_segura = "2 monto " + currencyFormatter.format(valor_preguntas[7][0]) + " colones";
                        } else if (contador_global > 9 && contador_global < 12) {
                            zona_segura = "3 monto " + currencyFormatter.format(valor_preguntas[9][0]) + " colones";
                        } else if (contador_global > 12) {
                            zona_segura = "4 monto " + currencyFormatter.format(valor_preguntas[12][0]) + " colones";
                        }
                        // Valida que la pregunta sea mayor a la 5 para indicar el monto acumulado y la
                        // zona segura
                        if (contador_global > 4) {
                            // Indicacion del monto de la pregunta actual
                            campo_texto_monto_actual.setText("Monto actual "
                                    + currencyFormatter.format(valor_preguntas[contador_global - 1][0]) + " colones");
                            campo_texto_zona_segura.setText("Zona segura " + zona_segura);
                        }
                    } else {
                        // Todos los campos de pregunta y respuestas se borran ya que no quedan mas que
                        // realizar
                        JOptionPane.showMessageDialog(null,
                                "Usted ha ganado ¿Quién quiere ser millonario?\nha ganado la cantidad de "
                                        + currencyFormatter.format(valor_preguntas[14][0]) + " colones",
                                "", JOptionPane.INFORMATION_MESSAGE);
                        guardar_ganador(nombre_jugador, valor_preguntas[14][0]);
                        // Volver al menu principal
                        panel_inicio.setVisible(true);
                        hilo.stop();
                        dispose();

                    }
                    // Evalua si la respuetas es correcta o bien se encuentra en las zonas seguras
                    // 5,8,10,13 en caso de ser asi el juego terminara y indicara el monto de la
                    // zona segura
                } else if (contador_global > 4 && contador_global < 7) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[4][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[4][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 7 && contador_global < 9) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[7][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[7][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 9 && contador_global < 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[9][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[9][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else if (contador_global > 12) {
                    JOptionPane.showMessageDialog(null,
                            "Respuesta incorrecta, usted ha ganado la cantidad de "
                                    + currencyFormatter.format(valor_preguntas[12][0]) + " colones",
                            "", JOptionPane.WARNING_MESSAGE);
                    guardar_ganador(nombre_jugador, valor_preguntas[12][0]);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                } else {
                    // Se indica que al jugador que ha perdido y lo lleva al menu de inicio
                    JOptionPane.showMessageDialog(null, "Respuesta incorrecta usted ha perdido", "",
                            JOptionPane.WARNING_MESSAGE);
                    // Volver al menu principal
                    panel_inicio.setVisible(true);
                    hilo.stop();
                    dispose();
                }

            } // Final Si
            campo_texto_respuesta_4.setForeground(new Color(255, 255, 255));
        }

    }//GEN-LAST:event_boton_respuesta_4MousePressed

    private void boton_retirarseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_retirarseMousePressed
// TODO add your handling code here:
// Confirmación de pregunta
        confirmación_pregunta = JOptionPane.showConfirmDialog(this, "¿Desea retirarse?", "Confirmación",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (confirmación_pregunta == JOptionPane.YES_OPTION) {
            // Se valida el contador global en caso de no se mayor a la primera segura no
            // ganara ningun premio
            if (contador_global >= 5) {
                // Muestra la cantidad ganada por el jugador, no se toma el valor de la pregunta
                // actual de contador global debido a que en esta es donde se retira el jugador
                // se toma el valor de la pregunta anteriormente contestada
                JOptionPane.showMessageDialog(null, "Usted ha ganado "
                        + currencyFormatter.format(valor_preguntas[contador_global - 1][0]) + " colones", "",
                        JOptionPane.WARNING_MESSAGE);
                guardar_ganador(nombre_jugador,valor_preguntas[contador_global-1][0]);
                panel_inicio.setVisible(true);
                hilo.stop();
                dispose();
                
            } else {
                JOptionPane.showMessageDialog(null, "Usted no ha ganado se ha retirado antes de la primera zona segura",
                        "", JOptionPane.WARNING_MESSAGE);
                panel_inicio.setVisible(true);
                hilo.stop();
                dispose();
                
            }

        }
    }//GEN-LAST:event_boton_retirarseMousePressed

    private void boton_comodin_llamadaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_comodin_llamadaMousePressed
        // TODO add your handling code here:
        String ayudantes_seleccionados_mensaje="";
        String[] alumnos = { "BIASETTY QUESADA LEONARDO JESUS", "CHAVES PANIAGUA ARISTIDES JOSUE",
                "CHAVES LOPEZ MAIRIN MARIA", "SANDINO RODRIGUEZ ELIECER JOSUE", "MEZA MENESES MELANY DANIELA",
                "CANTILLO OROZCO JORGE ANDRES", "RODRIGUEZ VILLALOBOS EDVIN EMILIO", "ULLOA GUTIERREZ GUSTAVO ANDRES",
                "RIVERA AGUILERA JAVIER JOSUE", "VALVERDE QUESADA RELLY STEVEN", "UMAÑA UREÑA JAVIER MAURICIO",
                "ESCALANTE CASTILLO XINIA DE LOS ANGELES", "CAMPOS PADILLA JORGE ALFREDO", "GUIDO LORIO JUNIOR ISAAC",
                "PALACIOS NUÑEZ RODOLFO ANDRES", "ROJAS CHAVES FERNANDO ALBERTO", "UGALDE DIAZ MARIELA DE JESUS",
                "CHACON JIMENEZ BRANDON JESUS", "RAMIREZ ALFARO MARIA PAOLA", "LORIA CARRAZCO ROGER JOSE",
                "MARTINEZ ALFARO KEYLOR GUSTAVO", "PORTUGUEZ GUERRERO MARIANA", "ANGULO HERRERA MARLON ANDRES",
                "QUIROS CASCANTE JORGE EDUARDO", "MARIN AGUILAR HENRY ALEJANDRO", "UMAÑA RIVERA JONATHAN AURELIO" };
        
        String[] alumnos_ayudantes = new String [3];
        // Calcular la posicion del alumno al azar que se requiera
        posicion_random_ayudante = Math.random() * 26; 
        // Convertir la posicion Double a Int para obtener la posicion correcta
        posicion_random_entera_ayudante = (int) posicion_random_ayudante;
        
        for(int i =0; i<alumnos_ayudantes.length;i++){
            //Verifica que el alumon seleccionado no se encuentre ya en el arreglo de alumnos ayudantes
            while(alumnos[posicion_random_entera_ayudante] == "Seleccionado"){
                // Calcular la posicion del alumno al azar que se requiera
                posicion_random_ayudante = Math.random() * 26; 
                // Convertir la posicion Double a Int para obtener la posicion correcta
                posicion_random_entera_ayudante = (int) posicion_random_ayudante;
                
                
            }
                alumnos_ayudantes[i]=alumnos[posicion_random_entera_ayudante];
                // Eliminar el alumno del array para evitar que se repitan
                alumnos[posicion_random_entera_ayudante] = "Seleccionado";
                ayudantes_seleccionados_mensaje=ayudantes_seleccionados_mensaje+"\nAYUDANTE "+Integer.toString(i+1)+": "+alumnos_ayudantes[i];

        }
        JOptionPane.showMessageDialog(null, ayudantes_seleccionados_mensaje, "Ayudantes", JOptionPane.INFORMATION_MESSAGE);

        // Calcular la posicion del alumno al azar que se requiera
        posicion_random_ayudante = Math.random() * 3; 
        // Convertir la posicion Double a Int para obtener la posicion correcta
        posicion_random_entera_ayudante = (int) posicion_random_ayudante;

        JOptionPane.showMessageDialog(null, "El ayudante seleccionado es: \n"+alumnos_ayudantes[posicion_random_entera_ayudante], "Ayudante", JOptionPane.INFORMATION_MESSAGE);
        
        // Oculta el comodin llamada ya que solamente es de un solo uso
        boton_comodin_llamada.setVisible(false);
        
    }//GEN-LAST:event_boton_comodin_llamadaMousePressed
//    Creacion de de clase para fondo de panel superior de inicio
    class fondo_panel_plantilla extends JPanel{
        
 //     Creacion de variable para obtener la imagen incluida en el paquete imagenes_juego
        private Image imagen_plantilla_preguntas;
        
        @Override
        public void paint(Graphics g){
//          Se indica la ruta de guardado de la imagen de fondo que se va a utilizar.
            imagen_plantilla_preguntas = new ImageIcon(getClass().getResource("/imagenes_juego/plantilla_preguntas.jpeg")).getImage();
            
//          Se definen los parametros de tamano para la imagen
            g.drawImage(imagen_plantilla_preguntas,0,0,getWidth(),getHeight(),this);
              
//           Muestra la imagen en el panel
            setOpaque(false);

//          Evita ocultar los elementos del panel que se encuentren activos
            super.paint(g);
             
        }
//  Final de clase fondo_panel_plantilla        
    }
    
//Metodo para guardar los datos del jugador    
public static void guardar_ganador(String nombre, int monto_ganado){
        int cantidad_filas, cantidad_columnas;
        try {
            // Se guarda el archivo de ganadores en una variable
            FileInputStream archivo_jugadores_ganadores = new FileInputStream(
                    "src/base_juego_historial/base_jugadores_historial.xlsx");
            // Se utiliza la libreria APACHE POI para el manejo de excel con java
            // https://javadoc.io/doc/org.apache.poi/poi/latest/index.html
            // Se guarda el libro y la hoja que se van a estar utilizando
            XSSFWorkbook libro = new XSSFWorkbook(archivo_jugadores_ganadores);
            XSSFSheet hoja = libro.getSheetAt(0);
            // Se obtiene la cantidad de filas que tiene la hoja
            cantidad_filas = hoja.getLastRowNum();
            // Se declara la variable fila para ubicar la primera fila de la hoja
            Row fila = hoja.getRow(0);
            // Se obtiene la cantidad de columnas que hay por fila de la hoja
            cantidad_columnas = fila.getLastCellNum();
            // Se crea la fila con la tomando la cantidad total y se agrega 1 extra la cual
            // esta vacia
            fila = hoja.createRow(cantidad_filas + 1);
            // Se crea la celda a modificar la cual guarda el nombre del jugador
            XSSFCell celda_nombre = (XSSFCell) fila.createCell(0);
            // Se inserta el valor del nombre del jugador en la celda
            celda_nombre.setCellValue(nombre);
            // Se crea la celda a modificar la cual guarda el monto ganado del jugador
            XSSFCell celda_monto = (XSSFCell) fila.createCell(1);
            // Se inserta el valor del monto ganado por el jugador en la celda
            celda_monto.setCellValue(monto_ganado);
            // Se cierra el archivo excel
            archivo_jugadores_ganadores.close();
            // Se guarda el archivo de ganadores en una variable para guardar los datos
            // modificados
            FileOutputStream archivo_jugadores_ganadores_guardado = new FileOutputStream(
                    "src/base_juego_historial/base_jugadores_historial.xlsx");
            // Se guardan los cambios
            libro.write(archivo_jugadores_ganadores_guardado);
            // Se cierra el archivo excel
            archivo_jugadores_ganadores_guardado.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(plantilla_preguntas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(plantilla_preguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(plantilla_preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(plantilla_preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(plantilla_preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(plantilla_preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new plantilla_preguntas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boton_comodin_50_50;
    private javax.swing.JPanel boton_comodin_llamada;
    private javax.swing.JPanel boton_regresar_inicio;
    private javax.swing.JPanel boton_respuesta_1;
    private javax.swing.JPanel boton_respuesta_2;
    private javax.swing.JPanel boton_respuesta_3;
    private javax.swing.JPanel boton_respuesta_4;
    private javax.swing.JPanel boton_retirarse;
    private javax.swing.JLabel campo_fecha;
    private javax.swing.JLabel campo_hora;
    private javax.swing.JLabel campo_texto_comenzar;
    private javax.swing.JLabel campo_texto_comenzar1;
    private javax.swing.JLabel campo_texto_comodin_50_50;
    private javax.swing.JLabel campo_texto_comodin_llamada;
    private javax.swing.JLabel campo_texto_monto_actual;
    private javax.swing.JLabel campo_texto_preguntas;
    private javax.swing.JLabel campo_texto_respuesta_1;
    private javax.swing.JLabel campo_texto_respuesta_2;
    private javax.swing.JLabel campo_texto_respuesta_3;
    private javax.swing.JLabel campo_texto_respuesta_4;
    private javax.swing.JLabel campo_texto_respuesta_a;
    private javax.swing.JLabel campo_texto_respuesta_b;
    private javax.swing.JLabel campo_texto_respuesta_c;
    private javax.swing.JLabel campo_texto_respuesta_d;
    private javax.swing.JLabel campo_texto_zona_segura;
    private javax.swing.JPanel panel_fondo_plantila_preguntas;
    // End of variables declaration//GEN-END:variables

}
